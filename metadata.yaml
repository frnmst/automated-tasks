#
# Copyright (C) 2019 Franco Masotti <franco.masotti@live.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

archiving:
    archive_documents_simple.sh:
        enabled: true
        purpose: >
            I use this to archive important documents on USB 
            flash drives just in case all the backups fail or files
            are deleted by mistake.
        steps:
            - 1: >
                Partition and format a USB drive
            - 2: > 
                Get the filesystem UUID with `lsblk -o name,uuid`
            - 3: >
                Edit the configuration file accordingly
            - 4: >
                Deploy
        references:
            - https://wiki.archlinux.org/index.php?title=Udisks&oldid=575618#udevadm_monitor
        programming language: bash
        running user: root
        dependencies:
            - GNU Bash:
                binaries:
                    - bash
                version:  5.0.7(1)
                homepage: http://www.gnu.org/software/bash/bash.html
            - GNU Coreutils:
                binaries:
                    - stdbuf
                    - sync
                version: 8.31
                homepage: https://www.gnu.org/software/coreutils/
            - util-linux:
                binaries:
                    - mount
                    - umount
                version: 2.34
                homepage: https://github.com/karelzak/util-linux
            - rsync:
                binaries:
                    - rsync
                version: 3.1.3
                homepage: https://rsync.samba.org/
            - systemd:
                binaries:
                    - udevadm
                version: 242.29
                homepage: https://www.github.com/systemd/systemd
        configuration files:
            notes: >
                I use one configuration file per user. 
            paths:
                - archive_documents_simple.myuser.conf
        systemd unit files:
            notes: >
                I use one configuration file per user.
            paths:
                service:
                    - archive-documents-simple.myuser.service
        deploy commands:
            start:
                - systemctl start archive-documents-simple.myuser.service
            enable:
                - systemctl enable archive-documents-simple.myuser.service
        license:
            name: GFDLv1.3+
            homepage: https://www.gnu.org/licenses/fdl-1.3.en.html
drives:
    smartd_test.py:
        enabled: true
        purpose: >
            I use this to run periodical S.M.A.R.T. tests on the hard drives.
        steps:
            - 1: >
                Run `hdparm -I ${drive}` and compare the results with
                `ls /dev/disk/by-id` to know which drive corresponds to the
                one you want to work on
            - 2: >
                Edit the configuration file accordingly
            - 3: >
                Deploy
        programming language: python3
        running user: root
        dependencies:
            - Python:
                binaries:
                    - python3
                version:  3.7.3
                homepage: http://www.python.org/
            - Smartmontools:
                binaries:
                    - smartctl
                version: 7.0
                homepage: http://smartmontools.sourceforge.net
        configuration files:
            notes: >
                The script supports only `/dev/disk/by-id` names. See also
                the udev rule file `/lib/udev/rules.d/60-persistent-storage.rules`.
            paths:
                - smartd_test.conf
        systemd unit files:
            notes: >
                I use one file per drive so I can control when a certain drive
                performs testing, instead of running them all at once.
            paths:
                service:
                    - smartd-test.ata-disk1.service
                timer:
                    - smartd-test.ata-disk1.timer
        deploy commands:
            start:
                - systemctl start smartd-test.ata-disk1.timer
            enable:
                - systemctl enable smartd-test.ata-disk1.timer
        license:
            name: GPLv3+
            homepage: https://www.gnu.org/licenses/gpl-3.0.html
    mdamd_check.py:
        enabled: true
        purpose: >
            I use this to run periodical RAID data scrubs on the hard drives.
        steps:
            - 1: >
                Run `lsblk` to know the names of the mdadm devices. See also
                `cat /proc/mdstat`
            - 2: >
                Edit the configuration file accordingly
            - 3: >
                Deploy
        references:
            - https://frnmst.gitlab.io/notes/raid-data-scrubbing.html
        programming language: python3
        running user: root
        dependencies:
            - Python:
                binaries:
                    - python3
                version:  3.7.3
                homepage: http://www.python.org/
        configuration files:
            paths:
                - mdadm_check.conf
        systemd unit files:
            paths:
                service:
                    - mdamd-check.service
                timer:
                    - mdamd-check.timer
        deploy commands:
            start:
                - systemctl start mdamd-check.timer
            enable:
                - systemctl enable mdamd-check.timer
        license:
            name: GPLv2+
            homepage: https://www.gnu.org/licenses/gpl-2.0.html
